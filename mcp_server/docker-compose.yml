services:
  neo4j:
    image: neo4j:5.26.0
    ports:
      - "7474:7474"  # HTTP Browser & API
      - "7687:7687"  # Bolt protocol
    environment:
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-demodemo}
      - NEO4J_server_memory_heap_initial__size=512m
      - NEO4J_server_memory_heap_max__size=1G
      - NEO4J_server_memory_pagecache_size=512m
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "http://localhost:7474"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  graphiti-mcp:
    image: zepai/knowledge-graph-mcp:latest
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - path: .env
        required: false # Makes the file optional. Default value is 'true'
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      # Override NEO4J_URI to use Docker service name instead of localhost
      - NEO4J_URI=bolt://neo4j:7687
      # PATH is required for uv to work properly
      - PATH=/root/.local/bin:${PATH}
    command: ["uv", "run", "graphiti_mcp_server.py", "--transport", "sse"]

  nginx:
    image: nginx:alpine
    ports:
      - "5150:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - MCP_AUTH_TOKEN=${MCP_AUTH_TOKEN:-}
    depends_on:
      - graphiti-mcp
      - neo4j
    command: ["/bin/sh", "-c", "envsubst '$$MCP_AUTH_TOKEN' < /etc/nginx/nginx.conf > /tmp/nginx.conf && nginx -c /tmp/nginx.conf -g 'daemon off;'"]
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://127.0.0.1/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  backup:
    build:
      context: .
      dockerfile: Dockerfile.backup
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Docker socket to control Neo4j container
      - /tmp:/tmp  # Shared temp directory for backup files
    environment:
      - NEO4J_CONTAINER=mcp_server-neo4j-1
      - VOLUME_NAME=mcp_server_neo4j_data
      - S3_BACKUP_BUCKET=${S3_BACKUP_BUCKET:-}
      - S3_BACKUP_PATH=${S3_BACKUP_PATH:-graphiti-backups}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - AWS_ENDPOINT_URL=${AWS_ENDPOINT_URL:-}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-7}
      - BACKUP_CRON=${BACKUP_CRON:-0 2 * * *}
      - TZ=${TZ:-UTC}
    depends_on:
      neo4j:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - backup  # Optional service: docker compose --profile backup up

volumes:
  neo4j_data:
  neo4j_logs:
