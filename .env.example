# GraphiTi - 环境变量配置示例
# 复制此文件为 .env.prod（服务器部署）或 .env（本地开发）

# ============================================
# LLM Provider 配置
# ============================================
# 支持的 provider: gemini, openai, anthropic, groq
# 默认: gemini（推荐）
LLM_PROVIDER=gemini

# ============================================
# Gemini 配置（默认推荐）
# ============================================
# 获取 API Key: https://makersuite.google.com/app/apikey
GOOGLE_API_KEY=
MODEL_NAME=gemini-2.5-flash
EMBEDDER_MODEL_NAME=gemini-embedding-001
MAX_TOKENS=64000

# ============================================
# OpenAI 配置（可选）
# ============================================
# 获取 API Key: https://platform.openai.com/api-keys
# 注意：
#   - Gemini provider: 不需要 OPENAI_API_KEY（使用 GeminiEmbedder）
#   - Anthropic/Groq provider: 需要 OPENAI_API_KEY 用于 embedding（使用 OpenAIEmbedder 作为 fallback）
OPENAI_API_KEY=
OPENAI_BASE_URL=
EMBEDDING_MODEL_NAME=

# ============================================
# Anthropic 配置（可选）
# ============================================
# 获取 API Key: https://console.anthropic.com/
ANTHROPIC_API_KEY=

# ============================================
# Groq 配置（可选）
# ============================================
# 获取 API Key: https://console.groq.com/
GROQ_API_KEY=

# ============================================
# Neo4j 配置（主要数据库）
# ============================================
NEO4J_URI=bolt://localhost:7687
NEO4J_PORT=7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=

# ============================================
# FalkorDB 配置（备选数据库）
# ============================================
FALKORDB_URI=
FALKORDB_PORT=
FALKORDB_USER=
FALKORDB_PASSWORD=

# ============================================
# 高级配置（可选）
# ============================================
USE_PARALLEL_RUNTIME=
SEMAPHORE_LIMIT=
MAX_REFLEXION_ITERATIONS=

# ============================================
# CI/CD 配置（仅开发使用）
# ============================================
GITHUB_SHA=

# ============================================
# 使用说明
# ============================================
# 1. 复制此文件：cp .env.example .env.prod
# 2. 选择 LLM Provider（推荐 Gemini）
# 3. 填写对应的 API Key
# 4. 设置 Neo4j 密码（或由 deploy.sh 自动生成）
# 5. 运行 ./deploy.sh 部署服务
