# ===========================================
# GraphiTi Docker Compose 环境变量配置
# ===========================================

# Neo4j 数据库密码
NEO4J_PASSWORD=your-secure-neo4j-password

# ===========================================
# LLM Provider 配置（选择一个）
# ===========================================
# 可选值: gemini, openai, anthropic, groq
LLM_PROVIDER=gemini

# -------------------------------------------
# Gemini 配置（推荐，默认）
# -------------------------------------------
GOOGLE_API_KEY=your-google-api-key
MODEL_NAME=gemini-2.5-flash
EMBEDDER_MODEL_NAME=gemini-embedding-001
MAX_TOKENS=64000

# -------------------------------------------
# OpenAI 配置（可选）
# 注意: Anthropic/Groq 需要 OpenAI 用于 embedding
# -------------------------------------------
# OPENAI_API_KEY=your-openai-api-key
# OPENAI_BASE_URL=https://api.openai.com/v1
# EMBEDDING_MODEL_NAME=text-embedding-3-small

# -------------------------------------------
# Anthropic 配置（可选）
# -------------------------------------------
# ANTHROPIC_API_KEY=your-anthropic-api-key

# -------------------------------------------
# Groq 配置（可选）
# -------------------------------------------
# GROQ_API_KEY=your-groq-api-key

# ===========================================
# API 认证配置（公网部署必须启用）
# ===========================================

# 启用 API 认证（生产环境设为 true）
API_AUTH_ENABLED=false

# 认证方法: bearer（推荐）或 apikey
API_AUTH_METHOD=bearer

# Bearer Token（使用 bearer 方法时）
# 生成命令: openssl rand -hex 32
API_AUTH_BEARER_TOKEN=

# API Key（使用 apikey 方法时）
# 生成命令: openssl rand -hex 32
API_AUTH_API_KEY=

# 公共端点（逗号分隔，无需认证）
API_AUTH_PUBLIC_ENDPOINTS=/healthcheck,/docs,/openapi.json

# ===========================================
# 快速生成安全密钥
# ===========================================
#
# 生成 Neo4j 密码:
#   openssl rand -base64 24
#
# 生成 Bearer Token:
#   openssl rand -hex 32
#
# 生成 API Key:
#   openssl rand -hex 32
#
# ===========================================
# 公网部署安全检查清单
# ===========================================
#
# ✅ NEO4J_PASSWORD 已设置强密码
# ✅ API_AUTH_ENABLED=true
# ✅ API_AUTH_BEARER_TOKEN 已设置（或 API_AUTH_API_KEY）
# ✅ 使用 HTTPS（通过 Nginx/Caddy 等反向代理）
# ✅ 限制 Neo4j 端口仅本地访问（127.0.0.1:7474, 127.0.0.1:7687）
# ✅ 配置防火墙规则
# ✅ 定期更新密码和 token
#
