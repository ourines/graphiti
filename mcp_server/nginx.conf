events {
    worker_connections 1024;
}

http {
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Upstream MCP server
    upstream mcp_server {
        server graphiti-mcp:8000;
    }

    server {
        listen 80;
        server_name _;

        # Health check endpoint (no auth required)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # SSE endpoint with authentication
        location /sse {
            # Basic authentication
            auth_basic "MCP Server Authentication";
            auth_basic_user_file /etc/nginx/.htpasswd;

            # Proxy settings for SSE
            proxy_pass http://mcp_server;
            proxy_http_version 1.1;

            # Disable buffering for SSE
            proxy_buffering off;
            proxy_cache off;

            # SSE specific headers
            proxy_set_header Connection '';
            proxy_set_header Cache-Control 'no-cache';

            # Forward original client information
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts for long-lived SSE connections
            proxy_read_timeout 24h;
            proxy_send_timeout 24h;
        }

        # Messages endpoint with authentication
        location /messages {
            # Basic authentication
            auth_basic "MCP Server Authentication";
            auth_basic_user_file /etc/nginx/.htpasswd;

            # Proxy settings
            proxy_pass http://mcp_server;
            proxy_http_version 1.1;

            # Forward original client information
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Standard timeouts
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }

        # Root path redirect
        location / {
            return 404 "Not found. Use /sse or /messages endpoints.\n";
            add_header Content-Type text/plain;
        }
    }
}
